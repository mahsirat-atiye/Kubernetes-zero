// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package mock_ingest is a generated GoMock package.
package ingest

import (
	database "awesomeProject1/database"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// CreateBook mocks base method.
func (m *MockRepo) CreateBook(name, author string) (database.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBook", name, author)
	ret0, _ := ret[0].(database.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBook indicates an expected call of CreateBook.
func (mr *MockRepoMockRecorder) CreateBook(name, author interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBook", reflect.TypeOf((*MockRepo)(nil).CreateBook), name, author)
}

// CreateBooksTable mocks base method.
func (m *MockRepo) CreateBooksTable() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateBooksTable")
}

// CreateBooksTable indicates an expected call of CreateBooksTable.
func (mr *MockRepoMockRecorder) CreateBooksTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBooksTable", reflect.TypeOf((*MockRepo)(nil).CreateBooksTable))
}
